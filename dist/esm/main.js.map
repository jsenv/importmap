{
  "version": 3,
  "file": "main.js",
  "sources": [
    "../../node_modules/@jsenv/core/helpers/babel/typeof/typeof.js",
    "../../src/internal/assertImportMap.js",
    "../../src/internal/hasScheme.js",
    "../../src/internal/urlToScheme.js",
    "../../src/internal/urlToPathname.js",
    "../../src/internal/urlToOrigin.js",
    "../../src/internal/pathnameToParentPathname.js",
    "../../src/resolveUrl.js",
    "../../src/internal/tryUrlResolution.js",
    "../../src/resolveSpecifier.js",
    "../../src/applyImportMap.js",
    "../../node_modules/@jsenv/core/helpers/babel/defineProperty/defineProperty.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectSpread2/objectSpread2.js",
    "../../src/composeTwoImportMaps.js",
    "../../src/internal/getCommonPathname.js",
    "../../src/internal/urlToRelativeUrl.js",
    "../../src/moveImportMap.js",
    "../../src/sortImportMap.js",
    "../../src/normalizeImportMap.js",
    "../../src/internal/pathnameToExtension.js",
    "../../src/resolveImport.js"
  ],
  "sourcesContent": [
    "const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n",
    "export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(`an importMap must be an object, received array ${value}`)\n  }\n}\n",
    "export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n",
    "export const urlToScheme = (urlString) => {\n  const colonIndex = urlString.indexOf(\":\")\n  if (colonIndex === -1) return \"\"\n  return urlString.slice(0, colonIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToPathname = (urlString) => {\n  return ressourceToPathname(urlToRessource(urlString))\n}\n\nconst urlToRessource = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return urlString.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = urlString.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return urlString.slice(scheme.length + 1)\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1 ? ressource : ressource.slice(0, searchSeparatorIndex)\n}\n",
    "import { urlToScheme } from \"./urlToScheme.js\"\n\nexport const urlToOrigin = (urlString) => {\n  const scheme = urlToScheme(urlString)\n\n  if (scheme === \"file\") {\n    return \"file://\"\n  }\n\n  if (scheme === \"http\" || scheme === \"https\") {\n    const secondProtocolSlashIndex = scheme.length + \"://\".length\n    const pathnameSlashIndex = urlString.indexOf(\"/\", secondProtocolSlashIndex)\n\n    if (pathnameSlashIndex === -1) return urlString\n    return urlString.slice(0, pathnameSlashIndex)\n  }\n\n  return urlString.slice(0, scheme.length + 1)\n}\n",
    "export const pathnameToParentPathname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) {\n    return \"/\"\n  }\n\n  return pathname.slice(0, slashLastIndex + 1)\n}\n",
    "// could be useful: https://url.spec.whatwg.org/#url-miscellaneous\n\nimport { urlToScheme } from \"./internal/urlToScheme.js\"\nimport { urlToPathname } from \"./internal/urlToPathname.js\"\nimport { urlToOrigin } from \"./internal/urlToOrigin.js\"\nimport { pathnameToParentPathname } from \"./internal/pathnameToParentPathname.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\n\nexport const resolveUrl = (specifier, baseUrl) => {\n  if (baseUrl) {\n    if (typeof baseUrl !== \"string\") {\n      throw new TypeError(writeBaseUrlMustBeAString({ baseUrl, specifier }))\n    }\n    if (!hasScheme(baseUrl)) {\n      throw new Error(writeBaseUrlMustBeAbsolute({ baseUrl, specifier }))\n    }\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  if (!baseUrl) {\n    throw new Error(writeBaseUrlRequired({ baseUrl, specifier }))\n  }\n\n  // scheme relative\n  if (specifier.slice(0, 2) === \"//\") {\n    return `${urlToScheme(baseUrl)}:${specifier}`\n  }\n\n  // origin relative\n  if (specifier[0] === \"/\") {\n    return `${urlToOrigin(baseUrl)}${specifier}`\n  }\n\n  const baseOrigin = urlToOrigin(baseUrl)\n  const basePathname = urlToPathname(baseUrl)\n\n  if (specifier === \".\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}`\n  }\n\n  // pathname relative inside\n  if (specifier.slice(0, 2) === \"./\") {\n    const baseDirectoryPathname = pathnameToParentPathname(basePathname)\n    return `${baseOrigin}${baseDirectoryPathname}${specifier.slice(2)}`\n  }\n\n  // pathname relative outside\n  if (specifier.slice(0, 3) === \"../\") {\n    let unresolvedPathname = specifier\n    const importerFolders = basePathname.split(\"/\")\n    importerFolders.pop()\n\n    while (unresolvedPathname.slice(0, 3) === \"../\") {\n      unresolvedPathname = unresolvedPathname.slice(3)\n      // when there is no folder left to resolved\n      // we just ignore '../'\n      if (importerFolders.length) {\n        importerFolders.pop()\n      }\n    }\n\n    const resolvedPathname = `${importerFolders.join(\"/\")}/${unresolvedPathname}`\n    return `${baseOrigin}${resolvedPathname}`\n  }\n\n  // bare\n  if (basePathname === \"\") {\n    return `${baseOrigin}/${specifier}`\n  }\n  if (basePathname[basePathname.length] === \"/\") {\n    return `${baseOrigin}${basePathname}${specifier}`\n  }\n  return `${baseOrigin}${pathnameToParentPathname(basePathname)}${specifier}`\n}\n\nconst writeBaseUrlMustBeAString = ({ baseUrl, specifier }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlMustBeAbsolute = ({ baseUrl, specifier }) => `baseUrl must be absolute.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlRequired = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl required to resolve relative specifier.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n",
    "import { hasScheme } from \"./hasScheme.js\"\nimport { resolveUrl } from \"../resolveUrl.js\"\n\nexport const tryUrlResolution = (string, url) => {\n  const result = resolveUrl(string, url)\n  return hasScheme(result) ? result : null\n}\n",
    "import { hasScheme } from \"./internal/hasScheme.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\n\nexport const resolveSpecifier = (specifier, importer) => {\n  if (\n    specifier === \".\" ||\n    specifier[0] === \"/\" ||\n    specifier.startsWith(\"./\") ||\n    specifier.startsWith(\"../\")\n  ) {\n    return resolveUrl(specifier, importer)\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  return null\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\nimport { tryUrlResolution } from \"./internal/tryUrlResolution.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\n\nexport const applyImportMap = ({ importMap, specifier, importer }) => {\n  assertImportMap(importMap)\n  if (typeof specifier !== \"string\") {\n    throw new TypeError(writeSpecifierMustBeAString({ specifier, importer }))\n  }\n  if (importer) {\n    if (typeof importer !== \"string\") {\n      throw new TypeError(writeImporterMustBeAString({ importer, specifier }))\n    }\n    if (!hasScheme(importer)) {\n      throw new Error(writeImporterMustBeAbsolute({ importer, specifier }))\n    }\n  }\n\n  const specifierUrl = resolveSpecifier(specifier, importer)\n  const specifierNormalized = specifierUrl || specifier\n\n  const { scopes } = importMap\n  if (scopes && importer) {\n    const scopeKeyMatching = Object.keys(scopes).find((scopeKey) => {\n      return scopeKey === importer || specifierIsPrefixOf(scopeKey, importer)\n    })\n    if (scopeKeyMatching) {\n      const scopeValue = scopes[scopeKeyMatching]\n      const remappingFromScopeImports = applyImports(specifierNormalized, scopeValue)\n      if (remappingFromScopeImports !== null) {\n        return remappingFromScopeImports\n      }\n    }\n  }\n\n  const { imports } = importMap\n  if (imports) {\n    const remappingFromImports = applyImports(specifierNormalized, imports)\n    if (remappingFromImports !== null) {\n      return remappingFromImports\n    }\n  }\n\n  if (specifierUrl) {\n    return specifierUrl\n  }\n\n  throw new Error(writeBareSpecifierMustBeRemapped({ specifier, importer }))\n}\n\nconst applyImports = (specifier, imports) => {\n  const importKeyArray = Object.keys(imports)\n\n  let i = 0\n  while (i < importKeyArray.length) {\n    const importKey = importKeyArray[i]\n    i++\n    if (importKey === specifier) {\n      const importValue = imports[importKey]\n      return importValue\n    }\n    if (specifierIsPrefixOf(importKey, specifier)) {\n      const importValue = imports[importKey]\n      const afterImportKey = specifier.slice(importKey.length)\n\n      return tryUrlResolution(afterImportKey, importValue)\n    }\n  }\n\n  return null\n}\n\nconst specifierIsPrefixOf = (specifierHref, href) => {\n  return specifierHref[specifierHref.length - 1] === \"/\" && href.startsWith(specifierHref)\n}\n\nconst writeSpecifierMustBeAString = ({ specifier, importer }) => `specifier must be a string.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n\nconst writeImporterMustBeAString = ({ importer, specifier }) => `importer must be a string.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeImporterMustBeAbsolute = ({ importer, specifier }) => `importer must be an absolute url.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeBareSpecifierMustBeRemapped = ({ specifier, importer }) => `Unmapped bare specifier.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n",
    "export default (obj, key, value) => {\n  // Shortcircuit the slow defineProperty path when possible.\n  // We are trying to avoid issues where setters defined on the\n  // prototype cause side effects under the fast path of simple\n  // assignment. By checking for existence of the property with\n  // the in operator, we can optimize most of this overhead away.\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    })\n  } else {\n    obj[key] = value\n  }\n  return obj\n}\n",
    "import defineProperty from \"../defineProperty/defineProperty.js\"\n\nexport default function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    var source = arguments[i] === null ? {} : arguments[i]\n    if (i % 2) {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key])\n      })\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\n    } else {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\n      })\n    }\n  }\n  return target\n}\n\n// This function is different to \"Reflect.ownKeys\". The enumerableOnly\n// filters on symbol properties only. Returned string properties are always\n// enumerable. It is good to use in objectSpread.\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object)\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object)\n    if (enumerableOnly)\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable\n      })\n    // eslint-disable-next-line prefer-spread\n    keys.push.apply(keys, symbols)\n  }\n  return keys\n}\n",
    "// https://github.com/systemjs/systemjs/blob/89391f92dfeac33919b0223bbf834a1f4eea5750/src/common.js#L136\nimport { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\n\nexport const composeTwoImportMaps = (leftImportMap, rightImportMap) => {\n  assertImportMap(leftImportMap)\n  assertImportMap(rightImportMap)\n\n  const importMap = {}\n\n  const leftImports = leftImportMap.imports\n  const rightImports = rightImportMap.imports\n  const leftHasImports = Boolean(leftImports)\n  const rightHasImports = Boolean(rightImports)\n  if (leftHasImports && rightHasImports) {\n    importMap.imports = composeTwoImports(leftImports, rightImports)\n  } else if (leftHasImports) {\n    importMap.imports = { ...leftImports }\n  } else if (rightHasImports) {\n    importMap.imports = { ...rightImports }\n  }\n\n  const leftScopes = leftImportMap.scopes\n  const rightScopes = rightImportMap.scopes\n  const leftHasScopes = Boolean(leftScopes)\n  const rightHasScopes = Boolean(rightScopes)\n  if (leftHasScopes && rightHasScopes) {\n    importMap.scopes = composeTwoScopes(leftScopes, rightScopes, importMap.imports || {})\n  } else if (leftHasScopes) {\n    importMap.scopes = { ...leftScopes }\n  } else if (rightHasScopes) {\n    importMap.scopes = { ...rightScopes }\n  }\n\n  return importMap\n}\n\nconst composeTwoImports = (leftImports, rightImports) => {\n  const topLevelMappings = {}\n  Object.keys(leftImports).forEach((leftSpecifier) => {\n    if (objectHasKey(rightImports, leftSpecifier)) {\n      // will be overidden\n      return\n    }\n    const leftAddress = leftImports[leftSpecifier]\n    const rightSpecifier = Object.keys(rightImports).find((rightSpecifier) => {\n      return compareAddressAndSpecifier(leftAddress, rightSpecifier)\n    })\n    topLevelMappings[leftSpecifier] = rightSpecifier ? rightImports[rightSpecifier] : leftSpecifier\n  })\n\n  Object.keys(rightImports).forEach((rightSpecifier) => {\n    topLevelMappings[rightSpecifier] = rightImports[rightSpecifier]\n  })\n\n  return topLevelMappings\n}\n\nconst objectHasKey = (object, key) => Object.prototype.hasOwnProperty.call(object, key)\n\nconst compareAddressAndSpecifier = (address, specifier) => {\n  const addressUrl = resolveUrl(address, \"file:///\")\n  const specifierUrl = resolveUrl(specifier, \"file:///\")\n  return addressUrl === specifierUrl\n}\n\nconst composeTwoScopes = (leftScopes, rightScopes, topLevelRemappings) => {\n  const scopedRemappings = {}\n  Object.keys(leftScopes).forEach((leftScopeKey) => {\n    if (objectHasKey(rightScopes, leftScopeKey)) {\n      // will be merged\n      scopedRemappings[leftScopeKey] = leftScopes[leftScopeKey]\n      return\n    }\n    const topLevelSpecifier = Object.keys(topLevelRemappings).find((topLevelSpecifierCandidate) => {\n      return compareAddressAndSpecifier(leftScopeKey, topLevelSpecifierCandidate)\n    })\n    if (topLevelSpecifier) {\n      scopedRemappings[topLevelRemappings[topLevelSpecifier]] = leftScopes[leftScopeKey]\n    } else {\n      scopedRemappings[leftScopeKey] = leftScopes[leftScopeKey]\n    }\n  })\n\n  Object.keys(rightScopes).forEach((rightScopeKey) => {\n    if (objectHasKey(scopedRemappings, rightScopeKey)) {\n      scopedRemappings[rightScopeKey] = composeTwoImports(\n        scopedRemappings[rightScopeKey],\n        rightScopes[rightScopeKey],\n      )\n    } else {\n      scopedRemappings[rightScopeKey] = {\n        ...rightScopes[rightScopeKey],\n      }\n    }\n  })\n  return scopedRemappings\n}\n",
    "export const getCommonPathname = (pathname, otherPathname) => {\n  const firstDifferentCharacterIndex = findFirstDifferentCharacterIndex(pathname, otherPathname)\n\n  // pathname and otherpathname are exactly the same\n  if (firstDifferentCharacterIndex === -1) {\n    return pathname\n  }\n\n  const commonString = pathname.slice(0, firstDifferentCharacterIndex + 1)\n\n  // the first different char is at firstDifferentCharacterIndex\n  if (pathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  if (otherPathname.charAt(firstDifferentCharacterIndex) === \"/\") {\n    return commonString\n  }\n\n  const firstDifferentSlashIndex = commonString.lastIndexOf(\"/\")\n  return pathname.slice(0, firstDifferentSlashIndex + 1)\n}\n\nconst findFirstDifferentCharacterIndex = (string, otherString) => {\n  const maxCommonLength = Math.min(string.length, otherString.length)\n  let i = 0\n  while (i < maxCommonLength) {\n    const char = string.charAt(i)\n    const otherChar = otherString.charAt(i)\n    if (char !== otherChar) {\n      return i\n    }\n    i++\n  }\n  if (string.length === otherString.length) {\n    return -1\n  }\n  // they differ at maxCommonLength\n  return maxCommonLength\n}\n",
    "import { getCommonPathname } from \"./getCommonPathname.js\"\nimport { pathnameToParentPathname } from \"./pathnameToParentPathname.js\"\n\nexport const urlToRelativeUrl = (urlArg, baseUrlArg) => {\n  const url = new URL(urlArg)\n  const baseUrl = new URL(baseUrlArg)\n\n  if (url.protocol !== baseUrl.protocol) {\n    return urlArg\n  }\n\n  if (url.username !== baseUrl.username || url.password !== baseUrl.password) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  if (url.host !== baseUrl.host) {\n    return urlArg.slice(url.protocol.length)\n  }\n\n  const { pathname, hash, search } = url\n  if (pathname === \"/\") {\n    return baseUrl.pathname.slice(1)\n  }\n\n  const { pathname: basePathname } = baseUrl\n\n  const commonPathname = getCommonPathname(pathname, basePathname)\n  if (!commonPathname) {\n    return urlArg\n  }\n\n  const specificPathname = pathname.slice(commonPathname.length)\n  const baseSpecificPathname = basePathname.slice(commonPathname.length)\n  if (baseSpecificPathname.includes(\"/\")) {\n    const baseSpecificParentPathname = pathnameToParentPathname(baseSpecificPathname)\n    const relativeDirectoriesNotation = baseSpecificParentPathname.replace(/.*?\\//g, \"../\")\n    return `${relativeDirectoriesNotation}${specificPathname}${search}${hash}`\n  }\n  return `${specificPathname}${search}${hash}`\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { urlToRelativeUrl } from \"./internal/urlToRelativeUrl.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\nimport { hasScheme } from \"./internal/hasScheme.js\"\n\nexport const moveImportMap = (importMap, fromUrl, toUrl) => {\n  assertImportMap(importMap)\n\n  const makeRelativeTo = (value, type) => {\n    let url\n    if (type === \"specifier\") {\n      url = resolveSpecifier(value, fromUrl)\n      if (!url) {\n        // bare specifier\n        return value\n      }\n    } else {\n      url = resolveUrl(value, fromUrl)\n    }\n\n    const relativeUrl = urlToRelativeUrl(url, toUrl)\n    if (relativeUrl.startsWith(\"../\")) {\n      return relativeUrl\n    }\n    if (relativeUrl.startsWith(\"./\")) {\n      return relativeUrl\n    }\n    if (hasScheme(relativeUrl)) {\n      return relativeUrl\n    }\n    return `./${relativeUrl}`\n  }\n\n  const importMapRelative = {}\n  const { imports } = importMap\n  if (imports) {\n    importMapRelative.imports = makeImportsRelativeTo(imports, makeRelativeTo) || imports\n  }\n\n  const { scopes } = importMap\n  if (scopes) {\n    importMapRelative.scopes = makeScopedRemappingRelativeTo(scopes, makeRelativeTo) || scopes\n  }\n\n  // nothing changed\n  if (importMapRelative.imports === imports && importMapRelative.scopes === scopes) {\n    return importMap\n  }\n  return importMapRelative\n}\n\nconst makeScopedRemappingRelativeTo = (scopes, makeRelativeTo) => {\n  const scopesTransformed = {}\n  const scopesRemaining = {}\n  let transformed = false\n  Object.keys(scopes).forEach((scopeKey) => {\n    const scopeValue = scopes[scopeKey]\n    const scopeKeyRelative = makeRelativeTo(scopeKey, \"address\")\n    const scopeValueRelative = makeImportsRelativeTo(scopeValue, makeRelativeTo)\n\n    if (scopeKeyRelative) {\n      transformed = true\n      scopesTransformed[scopeKeyRelative] = scopeValueRelative || scopeValue\n    } else if (scopeValueRelative) {\n      transformed = true\n      scopesTransformed[scopeKey] = scopeValueRelative\n    } else {\n      scopesRemaining[scopeKey] = scopeValueRelative\n    }\n  })\n  return transformed ? { ...scopesTransformed, ...scopesRemaining } : null\n}\n\nconst makeImportsRelativeTo = (imports, makeRelativeTo) => {\n  const importsTransformed = {}\n  const importsRemaining = {}\n  let transformed = false\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n    const importKeyRelative = makeRelativeTo(importKey, \"specifier\")\n    const importValueRelative = makeRelativeTo(importValue, \"address\")\n\n    if (importKeyRelative) {\n      transformed = true\n      importsTransformed[importKeyRelative] = importValueRelative || importValue\n    } else if (importValueRelative) {\n      transformed = true\n      importsTransformed[importKey] = importValueRelative\n    } else {\n      importsRemaining[importKey] = importValue\n    }\n  })\n  return transformed ? { ...importsTransformed, ...importsRemaining } : null\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n\n  return {\n    ...(imports ? { imports: sortImports(imports) } : {}),\n    ...(scopes ? { scopes: sortScopes(scopes) } : {}),\n  }\n}\n\nexport const sortImports = (imports) => {\n  const importsSorted = {}\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      importsSorted[name] = imports[name]\n    })\n  return importsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeName) => {\n      scopesSorted[scopeName] = sortImports(scopes[scopeName])\n    })\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n",
    "import { assertImportMap } from \"./internal/assertImportMap.js\"\nimport { tryUrlResolution } from \"./internal/tryUrlResolution.js\"\nimport { resolveSpecifier } from \"./resolveSpecifier.js\"\nimport { sortImports, sortScopes } from \"./sortImportMap.js\"\n\nexport const normalizeImportMap = (importMap, baseUrl) => {\n  assertImportMap(importMap)\n  if (typeof baseUrl !== \"string\") {\n    throw new TypeError(formulateBaseUrlMustBeAString({ baseUrl }))\n  }\n\n  const { imports, scopes } = importMap\n\n  return {\n    imports: imports ? normalizeImports(imports, baseUrl) : undefined,\n    scopes: scopes ? normalizeScopes(scopes, baseUrl) : undefined,\n  }\n}\n\nconst normalizeImports = (imports, baseUrl) => {\n  const importsNormalized = {}\n  Object.keys(imports).forEach((specifier) => {\n    const address = imports[specifier]\n\n    if (typeof address !== \"string\") {\n      console.warn(\n        formulateAddressMustBeAString({\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const specifierResolved = resolveSpecifier(specifier, baseUrl) || specifier\n\n    const addressUrl = tryUrlResolution(address, baseUrl)\n    if (addressUrl === null) {\n      console.warn(\n        formulateAdressResolutionFailed({\n          address,\n          baseUrl,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    if (specifier.endsWith(\"/\") && !addressUrl.endsWith(\"/\")) {\n      console.warn(\n        formulateAddressUrlRequiresTrailingSlash({\n          addressUrl,\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n    importsNormalized[specifierResolved] = addressUrl\n  })\n  return sortImports(importsNormalized)\n}\n\nconst normalizeScopes = (scopes, baseUrl) => {\n  const scopesNormalized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeValue = scopes[scope]\n    const scopeUrl = tryUrlResolution(scope, baseUrl)\n    if (scopeUrl === null) {\n      console.warn(\n        formulateScopeResolutionFailed({\n          scope,\n          baseUrl,\n        }),\n      )\n      return\n    }\n    const scopeValueNormalized = normalizeImports(scopeValue, baseUrl)\n    scopesNormalized[scopeUrl] = scopeValueNormalized\n  })\n  return sortScopes(scopesNormalized)\n}\n\nconst formulateBaseUrlMustBeAString = ({ baseUrl }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}`\n\nconst formulateAddressMustBeAString = ({ specifier, address }) => `Address must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateAdressResolutionFailed = ({\n  address,\n  baseUrl,\n  specifier,\n}) => `Address url resolution failed.\n--- address ---\n${address}\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst formulateAddressUrlRequiresTrailingSlash = ({\n  addressURL,\n  address,\n  specifier,\n}) => `Address must end with /.\n--- address url ---\n${addressURL}\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateScopeResolutionFailed = ({ scope, baseUrl }) => `Scope url resolution failed.\n--- scope ---\n${scope}\n--- base url ---\n${baseUrl}`\n",
    "export const pathnameToExtension = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex !== -1) {\n    pathname = pathname.slice(slashLastIndex + 1)\n  }\n\n  const dotLastIndex = pathname.lastIndexOf(\".\")\n  if (dotLastIndex === -1) return \"\"\n  // if (dotLastIndex === pathname.length - 1) return \"\"\n  return pathname.slice(dotLastIndex)\n}\n",
    "import { urlToPathname } from \"./internal/urlToPathname.js\"\nimport { pathnameToExtension } from \"./internal/pathnameToExtension.js\"\nimport { resolveUrl } from \"./resolveUrl.js\"\nimport { applyImportMap } from \"./applyImportMap.js\"\n\nexport const resolveImport = ({ specifier, importer, importMap, defaultExtension = true }) => {\n  return applyDefaultExtension({\n    url: importMap\n      ? applyImportMap({ importMap, specifier, importer })\n      : resolveUrl(specifier, importer),\n    importer,\n    defaultExtension,\n  })\n}\n\nconst applyDefaultExtension = ({ url, importer, defaultExtension }) => {\n  if (urlToPathname(url).endsWith(\"/\")) {\n    return url\n  }\n\n  if (typeof defaultExtension === \"string\") {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\") {\n      return `${url}${defaultExtension}`\n    }\n    return url\n  }\n\n  if (defaultExtension === true) {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\" && importer) {\n      const importerPathname = urlToPathname(importer)\n      const importerExtension = pathnameToExtension(importerPathname)\n      return `${url}${importerExtension}`\n    }\n  }\n  return url\n}\n"
  ],
  "names": [
    "nativeTypeOf",
    "obj",
    "customTypeOf",
    "Symbol",
    "constructor",
    "prototype",
    "iterator",
    "assertImportMap",
    "value",
    "TypeError",
    "type",
    "Array",
    "isArray",
    "hasScheme",
    "string",
    "test",
    "urlToScheme",
    "urlString",
    "colonIndex",
    "indexOf",
    "slice",
    "urlToPathname",
    "ressourceToPathname",
    "urlToRessource",
    "scheme",
    "length",
    "afterProtocol",
    "pathnameSlashIndex",
    "ressource",
    "searchSeparatorIndex",
    "urlToOrigin",
    "secondProtocolSlashIndex",
    "pathnameToParentPathname",
    "pathname",
    "slashLastIndex",
    "lastIndexOf",
    "resolveUrl",
    "specifier",
    "baseUrl",
    "writeBaseUrlMustBeAString",
    "Error",
    "writeBaseUrlMustBeAbsolute",
    "writeBaseUrlRequired",
    "baseOrigin",
    "basePathname",
    "baseDirectoryPathname",
    "unresolvedPathname",
    "importerFolders",
    "split",
    "pop",
    "resolvedPathname",
    "join",
    "tryUrlResolution",
    "url",
    "result",
    "resolveSpecifier",
    "importer",
    "startsWith",
    "applyImportMap",
    "importMap",
    "writeSpecifierMustBeAString",
    "writeImporterMustBeAString",
    "writeImporterMustBeAbsolute",
    "specifierUrl",
    "specifierNormalized",
    "scopes",
    "scopeKeyMatching",
    "Object",
    "keys",
    "find",
    "scopeKey",
    "specifierIsPrefixOf",
    "scopeValue",
    "remappingFromScopeImports",
    "applyImports",
    "imports",
    "remappingFromImports",
    "writeBareSpecifierMustBeRemapped",
    "importKeyArray",
    "i",
    "importKey",
    "importValue",
    "afterImportKey",
    "specifierHref",
    "href",
    "key",
    "defineProperty",
    "enumerable",
    "configurable",
    "writable",
    "target",
    "arguments",
    "source",
    "ownKeys",
    "forEach",
    "getOwnPropertyDescriptors",
    "defineProperties",
    "getOwnPropertyDescriptor",
    "object",
    "enumerableOnly",
    "getOwnPropertySymbols",
    "symbols",
    "filter",
    "sym",
    "push",
    "apply",
    "composeTwoImportMaps",
    "leftImportMap",
    "rightImportMap",
    "leftImports",
    "rightImports",
    "leftHasImports",
    "Boolean",
    "rightHasImports",
    "composeTwoImports",
    "leftScopes",
    "rightScopes",
    "leftHasScopes",
    "rightHasScopes",
    "composeTwoScopes",
    "topLevelMappings",
    "leftSpecifier",
    "objectHasKey",
    "leftAddress",
    "rightSpecifier",
    "compareAddressAndSpecifier",
    "hasOwnProperty",
    "call",
    "address",
    "addressUrl",
    "topLevelRemappings",
    "scopedRemappings",
    "leftScopeKey",
    "topLevelSpecifier",
    "topLevelSpecifierCandidate",
    "rightScopeKey",
    "getCommonPathname",
    "otherPathname",
    "firstDifferentCharacterIndex",
    "findFirstDifferentCharacterIndex",
    "commonString",
    "charAt",
    "firstDifferentSlashIndex",
    "otherString",
    "maxCommonLength",
    "Math",
    "min",
    "char",
    "otherChar",
    "urlToRelativeUrl",
    "urlArg",
    "baseUrlArg",
    "URL",
    "protocol",
    "username",
    "password",
    "host",
    "hash",
    "search",
    "commonPathname",
    "specificPathname",
    "baseSpecificPathname",
    "includes",
    "baseSpecificParentPathname",
    "relativeDirectoriesNotation",
    "replace",
    "moveImportMap",
    "fromUrl",
    "toUrl",
    "makeRelativeTo",
    "relativeUrl",
    "importMapRelative",
    "makeImportsRelativeTo",
    "makeScopedRemappingRelativeTo",
    "scopesTransformed",
    "scopesRemaining",
    "transformed",
    "scopeKeyRelative",
    "scopeValueRelative",
    "importsTransformed",
    "importsRemaining",
    "importKeyRelative",
    "importValueRelative",
    "sortImportMap",
    "sortImports",
    "sortScopes",
    "importsSorted",
    "sort",
    "compareLengthOrLocaleCompare",
    "name",
    "scopesSorted",
    "scopeName",
    "a",
    "b",
    "localeCompare",
    "normalizeImportMap",
    "formulateBaseUrlMustBeAString",
    "normalizeImports",
    "undefined",
    "normalizeScopes",
    "importsNormalized",
    "console",
    "warn",
    "formulateAddressMustBeAString",
    "specifierResolved",
    "formulateAdressResolutionFailed",
    "endsWith",
    "formulateAddressUrlRequiresTrailingSlash",
    "scopesNormalized",
    "scope",
    "scopeUrl",
    "formulateScopeResolutionFailed",
    "scopeValueNormalized",
    "addressURL",
    "pathnameToExtension",
    "dotLastIndex",
    "resolveImport",
    "defaultExtension",
    "applyDefaultExtension",
    "extension",
    "importerPathname",
    "importerExtension"
  ],
  "mappings": "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"
}