{"version":3,"file":"main.js","sources":["../../node_modules/@jsenv/core/helpers/babel/typeof/typeof.js","../../src/assertImportMap.js","../../src/hasScheme.js","../../node_modules/@jsenv/href/src/hrefToScheme/hrefToScheme.js","../../node_modules/@jsenv/href/src/hrefToPathname/hrefToPathname.js","../../node_modules/@jsenv/href/src/hrefToOrigin/hrefToOrigin.js","../../node_modules/@jsenv/href/src/pathnameToDirname/pathnameToDirname.js","../../src/resolveUrl/resolveUrl.js","../../src/tryUrlResolution.js","../../src/resolveSpecifier/resolveSpecifier.js","../../src/applyImportMap/applyImportMap.js","../../node_modules/@jsenv/core/helpers/babel/defineProperty/defineProperty.js","../../node_modules/@jsenv/core/helpers/babel/objectSpread2/objectSpread2.js","../../src/composeTwoImportMaps/composeTwoImportMaps.js","../../src/sortImportMap/sortImportMap.js","../../src/normalizeImportMap/normalizeImportMap.js","../../src/normalizeImportMapForProject/normalizeImportMapForProject.js","../../node_modules/@jsenv/href/src/pathnameToExtension/pathnameToExtension.js","../../src/resolveImport/resolveImport.js","../../node_modules/@jsenv/operating-system-path/src/starts-with-windows-drive-letter.js","../../node_modules/@jsenv/operating-system-path/src/replace-slashes-with-backslashes.js","../../node_modules/@jsenv/operating-system-path/src/pathname-to-operating-system-path.js","../../node_modules/@jsenv/href/src/pathnameToRelativePath/pathnameToRelativePath.js","../../src/resolveImportForProject/resolveImportForProject.js","../../src/resolveSpecifierForProject/resolveSpecifierForProject.js","../../src/wrapImportMap/wrapImportMap.js"],"sourcesContent":["const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n","export const assertImportMap = (value) => {\n  if (value === null) {\n    throw new TypeError(`an importMap must be an object, got null`)\n  }\n\n  const type = typeof value\n  if (type !== \"object\") {\n    throw new TypeError(`an importMap must be an object, received ${value}`)\n  }\n\n  if (Array.isArray(value)) {\n    throw new TypeError(`an importMap must be an object, received array ${value}`)\n  }\n}\n","export const hasScheme = (string) => {\n  return /^[a-zA-Z]{2,}:/.test(string)\n}\n","export const hrefToScheme = (href) => {\n  const colonIndex = href.indexOf(\":\")\n  if (colonIndex === -1) return \"\"\n  return href.slice(0, colonIndex)\n}\n","import { hrefToScheme } from \"../hrefToScheme/hrefToScheme.js\"\n\nexport const hrefToPathname = (href) => {\n  return ressourceToPathname(hrefToRessource(href))\n}\n\nconst hrefToRessource = (href) => {\n  const scheme = hrefToScheme(href)\n\n  if (scheme === \"file\") {\n    return href.slice(\"file://\".length)\n  }\n\n  if (scheme === \"https\" || scheme === \"http\") {\n    // remove origin\n    const afterProtocol = href.slice(scheme.length + \"://\".length)\n    const pathnameSlashIndex = afterProtocol.indexOf(\"/\", \"://\".length)\n    return afterProtocol.slice(pathnameSlashIndex)\n  }\n\n  return href.slice(scheme.length + 1)\n}\n\nconst ressourceToPathname = (ressource) => {\n  const searchSeparatorIndex = ressource.indexOf(\"?\")\n  return searchSeparatorIndex === -1 ? ressource : ressource.slice(0, searchSeparatorIndex)\n}\n","import { hrefToScheme } from \"../hrefToScheme/hrefToScheme.js\"\n\nexport const hrefToOrigin = (href) => {\n  const scheme = hrefToScheme(href)\n\n  if (scheme === \"file\") {\n    return \"file://\"\n  }\n\n  if (scheme === \"http\" || scheme === \"https\") {\n    const secondProtocolSlashIndex = scheme.length + \"://\".length\n    const pathnameSlashIndex = href.indexOf(\"/\", secondProtocolSlashIndex)\n\n    if (pathnameSlashIndex === -1) return href\n    return href.slice(0, pathnameSlashIndex)\n  }\n\n  return href.slice(0, scheme.length + 1)\n}\n","export const pathnameToDirname = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex === -1) return \"\"\n\n  return pathname.slice(0, slashLastIndex)\n}\n","// could be useful: https://url.spec.whatwg.org/#url-miscellaneous\n\nimport { hasScheme } from \"../hasScheme.js\"\nimport { hrefToScheme } from \"@jsenv/href/src/hrefToScheme/hrefToScheme.js\"\nimport { hrefToPathname } from \"@jsenv/href/src/hrefToPathname/hrefToPathname.js\"\nimport { hrefToOrigin } from \"@jsenv/href/src/hrefToOrigin/hrefToOrigin.js\"\nimport { pathnameToDirname } from \"@jsenv/href/src/pathnameToDirname/pathnameToDirname.js\"\n\nexport const resolveUrl = (specifier, baseUrl) => {\n  if (baseUrl) {\n    if (typeof baseUrl !== \"string\") {\n      throw new TypeError(writeBaseUrlMustBeAString({ baseUrl, specifier }))\n    }\n    if (!hasScheme(baseUrl)) {\n      throw new Error(writeBaseUrlMustBeAbsolute({ baseUrl, specifier }))\n    }\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  if (!baseUrl) {\n    throw new Error(writeBaseUrlRequired({ baseUrl, specifier }))\n  }\n\n  // scheme relative\n  if (specifier.slice(0, 2) === \"//\") {\n    return `${hrefToScheme(baseUrl)}:${specifier}`\n  }\n\n  // origin relative\n  if (specifier[0] === \"/\") {\n    return `${hrefToOrigin(baseUrl)}${specifier}`\n  }\n\n  const baseOrigin = hrefToOrigin(baseUrl)\n  const basePathname = hrefToPathname(baseUrl)\n\n  // pathname relative inside\n  if (specifier.slice(0, 2) === \"./\") {\n    const baseDirname = pathnameToDirname(basePathname)\n    return `${baseOrigin}${baseDirname}/${specifier.slice(2)}`\n  }\n\n  // pathname relative outside\n  if (specifier.slice(0, 3) === \"../\") {\n    let unresolvedPathname = specifier\n    const importerFolders = basePathname.split(\"/\")\n    importerFolders.pop()\n\n    while (unresolvedPathname.slice(0, 3) === \"../\") {\n      // when there is no folder left to resolved\n      // we just ignore '../'\n      if (importerFolders.length) {\n        importerFolders.pop()\n      }\n      unresolvedPathname = unresolvedPathname.slice(3)\n    }\n\n    const resolvedPathname = `${importerFolders.join(\"/\")}/${unresolvedPathname}`\n    return `${baseOrigin}${resolvedPathname}`\n  }\n\n  // bare\n  if (basePathname === \"\") {\n    return `${baseOrigin}/${specifier}`\n  }\n  if (basePathname[basePathname.length] === \"/\") {\n    return `${baseOrigin}${basePathname}${specifier}`\n  }\n  return `${baseOrigin}${pathnameToDirname(basePathname)}/${specifier}`\n}\n\nconst writeBaseUrlMustBeAString = ({ baseUrl, specifier }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlMustBeAbsolute = ({ baseUrl, specifier }) => `baseUrl must be absolute.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst writeBaseUrlRequired = ({\n  baseUrl,\n  specifier,\n}) => `baseUrl required to resolve relative specifier.\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n","import { hasScheme } from \"./hasScheme.js\"\nimport { resolveUrl } from \"./resolveUrl/resolveUrl.js\"\n\nexport const tryUrlResolution = (string, url) => {\n  const result = resolveUrl(string, url)\n  return hasScheme(result) ? result : null\n}\n","import { hasScheme } from \"../hasScheme.js\"\nimport { resolveUrl } from \"../resolveUrl/resolveUrl.js\"\n\nexport const resolveSpecifier = (specifier, importer) => {\n  if (specifier[0] === \"/\" || specifier.startsWith(\"./\") || specifier.startsWith(\"../\")) {\n    return resolveUrl(specifier, importer)\n  }\n\n  if (hasScheme(specifier)) {\n    return specifier\n  }\n\n  return null\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\nimport { hasScheme } from \"../hasScheme.js\"\nimport { tryUrlResolution } from \"../tryUrlResolution.js\"\nimport { resolveSpecifier } from \"../resolveSpecifier/resolveSpecifier.js\"\n\nexport const applyImportMap = ({ importMap, specifier, importer }) => {\n  assertImportMap(importMap)\n  if (typeof specifier !== \"string\") {\n    throw new TypeError(writeSpecifierMustBeAString({ specifier, importer }))\n  }\n  if (importer) {\n    if (typeof importer !== \"string\") {\n      throw new TypeError(writeImporterMustBeAString({ importer, specifier }))\n    }\n    if (!hasScheme(importer)) {\n      throw new Error(writeImporterMustBeAbsolute({ importer, specifier }))\n    }\n  }\n\n  const specifierUrl = resolveSpecifier(specifier, importer)\n  const specifierNormalized = specifierUrl || specifier\n\n  const { scopes } = importMap\n  if (scopes && importer) {\n    const scopeKeyMatching = Object.keys(scopes).find((scopeKey) => {\n      return scopeKey === importer || specifierIsPrefixOf(scopeKey, importer)\n    })\n    if (scopeKeyMatching) {\n      const scopeValue = scopes[scopeKeyMatching]\n      const remappingFromScopeImports = applyImports(specifierNormalized, scopeValue)\n      if (remappingFromScopeImports !== null) {\n        return remappingFromScopeImports\n      }\n    }\n  }\n\n  const { imports } = importMap\n  if (imports) {\n    const remappingFromImports = applyImports(specifierNormalized, imports)\n    if (remappingFromImports !== null) {\n      return remappingFromImports\n    }\n  }\n\n  if (specifierUrl) {\n    return specifierUrl\n  }\n\n  throw new Error(writeBareSpecifierMustBeRemapped({ specifier, importer }))\n}\n\nconst applyImports = (specifier, imports) => {\n  const importKeyArray = Object.keys(imports)\n\n  let i = 0\n  while (i < importKeyArray.length) {\n    const importKey = importKeyArray[i]\n    i++\n    if (importKey === specifier) {\n      const importValue = imports[importKey]\n      return importValue\n    }\n    if (specifierIsPrefixOf(importKey, specifier)) {\n      const importValue = imports[importKey]\n      const afterImportKey = specifier.slice(importKey.length)\n\n      return tryUrlResolution(afterImportKey, importValue)\n    }\n  }\n\n  return null\n}\n\nconst specifierIsPrefixOf = (specifierHref, href) => {\n  return specifierHref[specifierHref.length - 1] === \"/\" && href.startsWith(specifierHref)\n}\n\nconst writeSpecifierMustBeAString = ({ specifier, importer }) => `specifier must be a string.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n\nconst writeImporterMustBeAString = ({ importer, specifier }) => `importer must be a string.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeImporterMustBeAbsolute = ({ importer, specifier }) => `importer must be an absolute url.\n--- importer ---\n${importer}\n--- specifier ---\n${specifier}`\n\nconst writeBareSpecifierMustBeRemapped = ({ specifier, importer }) => `Unmapped bare specifier.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}`\n","export default (obj, key, value) => {\n  // Shortcircuit the slow defineProperty path when possible.\n  // We are trying to avoid issues where setters defined on the\n  // prototype cause side effects under the fast path of simple\n  // assignment. By checking for existence of the property with\n  // the in operator, we can optimize most of this overhead away.\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    })\n  } else {\n    obj[key] = value\n  }\n  return obj\n}\n","import defineProperty from \"../defineProperty/defineProperty.js\"\n\nexport default function(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    var source = arguments[i] === null ? {} : arguments[i]\n    if (i % 2) {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(source, true).forEach(function(key) {\n        defineProperty(target, key, source[key])\n      })\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\n    } else {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(source).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\n      })\n    }\n  }\n  return target\n}\n\n// This function is different to \"Reflect.ownKeys\". The enumerableOnly\n// filters on symbol properties only. Returned string properties are always\n// enumerable. It is good to use in objectSpread.\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object)\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object)\n    if (enumerableOnly)\n      symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable\n      })\n    // eslint-disable-next-line prefer-spread\n    keys.push.apply(keys, symbols)\n  }\n  return keys\n}\n","// https://github.com/systemjs/systemjs/blob/89391f92dfeac33919b0223bbf834a1f4eea5750/src/common.js#L136\nimport { assertImportMap } from \"../assertImportMap.js\"\n\nexport const composeTwoImportMaps = (leftImportMap, rightImportMap) => {\n  assertImportMap(leftImportMap)\n  assertImportMap(rightImportMap)\n\n  return {\n    imports: composeTwoImports(leftImportMap.imports, rightImportMap.imports),\n    scopes: composeTwoScopes(leftImportMap.scopes, rightImportMap.scopes),\n  }\n}\n\nconst composeTwoImports = (leftImports = {}, rightImports = {}) => {\n  return { ...leftImports, ...rightImports }\n}\n\nconst composeTwoScopes = (leftScopes = {}, rightScopes = {}) => {\n  const scopes = { ...leftScopes }\n  Object.keys(rightScopes).forEach((scopeKey) => {\n    if (scopes.hasOwnProperty(scopeKey)) {\n      scopes[scopeKey] = { ...scopes[scopeKey], ...rightScopes[scopeKey] }\n    } else {\n      scopes[scopeKey] = { ...rightScopes[scopeKey] }\n    }\n  })\n  return scopes\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\n\nexport const sortImportMap = (importMap) => {\n  assertImportMap(importMap)\n\n  const { imports, scopes } = importMap\n  return {\n    imports: imports ? sortImports(imports) : undefined,\n    scopes: scopes ? sortScopes(scopes) : undefined,\n  }\n}\n\nexport const sortImports = (imports) => {\n  const importsSorted = {}\n  Object.keys(imports)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((name) => {\n      importsSorted[name] = imports[name]\n    })\n  return importsSorted\n}\n\nexport const sortScopes = (scopes) => {\n  const scopesSorted = {}\n  Object.keys(scopes)\n    .sort(compareLengthOrLocaleCompare)\n    .forEach((scopeName) => {\n      scopesSorted[scopeName] = sortImports(scopes[scopeName])\n    })\n  return scopesSorted\n}\n\nconst compareLengthOrLocaleCompare = (a, b) => {\n  return b.length - a.length || a.localeCompare(b)\n}\n","import { assertImportMap } from \"../assertImportMap.js\"\nimport { tryUrlResolution } from \"../tryUrlResolution.js\"\nimport { resolveSpecifier } from \"../resolveSpecifier/resolveSpecifier.js\"\n\nimport { sortImports, sortScopes } from \"../sortImportMap/sortImportMap.js\"\n\nexport const normalizeImportMap = (importMap, baseUrl) => {\n  assertImportMap(importMap)\n  if (typeof baseUrl !== \"string\") {\n    throw new TypeError(formulateBaseUrlMustBeAString({ baseUrl }))\n  }\n\n  const { imports, scopes } = importMap\n\n  return {\n    imports: imports ? normalizeImports(imports, baseUrl) : undefined,\n    scopes: scopes ? normalizeScopes(scopes, baseUrl) : undefined,\n  }\n}\n\nconst normalizeImports = (imports, baseUrl) => {\n  const importsNormalized = {}\n  Object.keys(imports).forEach((specifier) => {\n    const address = imports[specifier]\n\n    if (typeof address !== \"string\") {\n      console.warn(\n        formulateAddressMustBeAString({\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    const specifierResolved = resolveSpecifier(specifier, baseUrl) || specifier\n\n    const addressUrl = tryUrlResolution(address, baseUrl)\n    if (addressUrl === null) {\n      console.warn(\n        formulateAdressResolutionFailed({\n          address,\n          baseUrl,\n          specifier,\n        }),\n      )\n      return\n    }\n\n    if (specifier.endsWith(\"/\") && !addressUrl.endsWith(\"/\")) {\n      console.warn(\n        formulateAddressUrlRequiresTrailingSlash({\n          addressUrl,\n          address,\n          specifier,\n        }),\n      )\n      return\n    }\n    importsNormalized[specifierResolved] = addressUrl\n  })\n  return sortImports(importsNormalized)\n}\n\nconst normalizeScopes = (scopes, baseUrl) => {\n  const scopesNormalized = {}\n  Object.keys(scopes).forEach((scope) => {\n    const scopeValue = scopes[scope]\n    const scopeUrl = tryUrlResolution(scope, baseUrl)\n    if (scopeUrl === null) {\n      console.warn(\n        formulateScopeResolutionFailed({\n          scope,\n          baseUrl,\n        }),\n      )\n      return\n    }\n    const scopeValueNormalized = normalizeImports(scopeValue, baseUrl)\n    scopesNormalized[scopeUrl] = scopeValueNormalized\n  })\n  return sortScopes(scopesNormalized)\n}\n\nconst formulateBaseUrlMustBeAString = ({ baseUrl }) => `baseUrl must be a string.\n--- base url ---\n${baseUrl}`\n\nconst formulateAddressMustBeAString = ({ specifier, address }) => `Address must be a string.\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateAdressResolutionFailed = ({\n  address,\n  baseUrl,\n  specifier,\n}) => `Address url resolution failed.\n--- address ---\n${address}\n--- base url ---\n${baseUrl}\n--- specifier ---\n${specifier}`\n\nconst formulateAddressUrlRequiresTrailingSlash = ({\n  addressURL,\n  address,\n  specifier,\n}) => `Address must end with /.\n--- address url ---\n${addressURL}\n--- address ---\n${address}\n--- specifier ---\n${specifier}`\n\nconst formulateScopeResolutionFailed = ({ scope, baseUrl }) => `Scope url resolution failed.\n--- scope ---\n${scope}\n--- base url ---\n${baseUrl}`\n","import { normalizeImportMap } from \"../normalizeImportMap/normalizeImportMap.js\"\n\nexport const normalizeImportMapForProject = (\n  importMap,\n  httpResolutionOrigin = \"http://fake_origin_unlikely_to_collide.ext\",\n) => {\n  return normalizeImportMap(importMap, httpResolutionOrigin)\n}\n","export const pathnameToExtension = (pathname) => {\n  const slashLastIndex = pathname.lastIndexOf(\"/\")\n  if (slashLastIndex !== -1) {\n    pathname = pathname.slice(slashLastIndex + 1)\n  }\n\n  const dotLastIndex = pathname.lastIndexOf(\".\")\n  if (dotLastIndex === -1) return \"\"\n  // if (dotLastIndex === pathname.length - 1) return \"\"\n  return pathname.slice(dotLastIndex)\n}\n","// directly target the files because this code\n// will be executed either on node or browser\n// and also we don't want to pull more code than necessary\n// when this one gets bundled\nimport { hrefToPathname } from \"@jsenv/href/src/hrefToPathname/hrefToPathname.js\"\nimport { pathnameToExtension } from \"@jsenv/href/src/pathnameToExtension/pathnameToExtension.js\"\nimport { resolveUrl } from \"../resolveUrl/resolveUrl.js\"\nimport { applyImportMap } from \"../applyImportMap/applyImportMap.js\"\n\nexport const resolveImport = ({ specifier, importer, importMap, defaultExtension = true }) => {\n  return applyDefaultExtension({\n    url: importMap\n      ? applyImportMap({ importMap, specifier, importer })\n      : resolveUrl(specifier, importer),\n    importer,\n    defaultExtension,\n  })\n}\n\nconst applyDefaultExtension = ({ url, importer, defaultExtension }) => {\n  if (typeof defaultExtension === \"string\") {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\") {\n      return `${url}${defaultExtension}`\n    }\n    return url\n  }\n\n  if (defaultExtension === true) {\n    const extension = pathnameToExtension(url)\n    if (extension === \"\" && importer) {\n      const importerPathname = hrefToPathname(importer)\n      const importerExtension = pathnameToExtension(importerPathname)\n      return `${url}${importerExtension}`\n    }\n  }\n  return url\n}\n","export const startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n","export const replaceSlashesWithBackSlashes = (string) => string.replace(/\\//g, \"\\\\\")\n","import { startsWithWindowsDriveLetter } from \"./starts-with-windows-drive-letter.js\"\nimport { replaceSlashesWithBackSlashes } from \"./replace-slashes-with-backslashes.js\"\n\nexport const pathnameToOperatingSystemPath = (pathname) => {\n  if (pathname[0] !== \"/\") throw new Error(`pathname must start with /, got ${pathname}`)\n\n  const pathnameWithoutLeadingSlash = pathname.slice(1)\n  if (\n    startsWithWindowsDriveLetter(pathnameWithoutLeadingSlash) &&\n    pathnameWithoutLeadingSlash[2] === \"/\"\n  ) {\n    return replaceSlashesWithBackSlashes(pathnameWithoutLeadingSlash)\n  }\n\n  // linux mac pathname === operatingSystemFilename\n  return pathname\n}\n","export const pathnameToRelativePath = (pathname, otherPathname) =>\n  pathname.slice(otherPathname.length)\n","import { pathnameToOperatingSystemPath } from \"@jsenv/operating-system-path\"\nimport { hrefToOrigin, hrefToPathname, pathnameToRelativePath } from \"@jsenv/href\"\nimport { resolveImport } from \"../resolveImport/resolveImport.js\"\n\nexport const resolveImportForProject = ({\n  projectPathname,\n  specifier,\n  importer = projectPathname,\n  importMap,\n  importDefaultExtension,\n  httpResolutionForcing = true,\n  httpResolutionOrigin = \"http://fake_origin_unlikely_to_collide.ext\",\n  insideProjectForcing = true,\n}) => {\n  if (typeof projectPathname !== \"string\") {\n    throw new TypeError(`projectPathname must be a string, got ${projectPathname}`)\n  }\n\n  const projectHref = `file://${projectPathname}`\n  const importerHref = importer || projectHref\n\n  if (\n    insideProjectForcing &&\n    importer !== projectHref &&\n    hrefUseFileProtocol(importerHref) &&\n    !importerHref.startsWith(`${projectHref}/`)\n  ) {\n    throw new Error(\n      formulateImporterMustBeInsideProject({\n        projectPathname,\n        importer,\n      }),\n    )\n  }\n\n  let importerForProject\n  if (httpResolutionForcing) {\n    if (importerHref === projectHref) {\n      importerForProject = `${httpResolutionOrigin}`\n    } else if (importerHref.startsWith(`${projectHref}/`)) {\n      const importerPathname = hrefToPathname(importerHref)\n      const importerRelativePath = pathnameToRelativePath(importerPathname, projectPathname)\n      // 99% of the time importer is an operating system path\n      // here we ensure / is resolved against project by forcing an url resolution\n      // prefixing with origin\n      importerForProject = `${httpResolutionOrigin}${importerRelativePath}`\n    } else {\n      // there is already a scheme (http, https, file), keep it\n      // it means there is an absolute import starting with file:// or http:// for instance.\n      importerForProject = importerHref\n    }\n  } else {\n    importerForProject = importerHref\n  }\n\n  const importResolved = resolveImport({\n    specifier,\n    importer: importerForProject,\n    importMap,\n    defaultExtension: importDefaultExtension,\n  })\n\n  if (\n    insideProjectForcing &&\n    // only if use file protocol because\n    // it's ok to have an external import like \"https://cdn.com/jquery.js\"\n    hrefUseFileProtocol(importResolved) &&\n    importResolved !== projectHref &&\n    !importResolved.startsWith(`${projectHref}/`)\n  ) {\n    throw new Error(\n      formulateImportMustBeInsideProject({\n        projectPathname,\n        specifier,\n        importer,\n        importResolved,\n      }),\n    )\n  }\n\n  if (httpResolutionForcing && hrefToOrigin(importResolved) === httpResolutionOrigin) {\n    const importRelativePath = hrefToPathname(importResolved)\n    return `${projectHref}${importRelativePath}`\n  }\n\n  return importResolved\n}\n\nconst hrefUseFileProtocol = (specifier) => specifier.startsWith(\"file://\")\n\nconst formulateImporterMustBeInsideProject = ({\n  projectPathname,\n  importer,\n}) => `importer must be inside project.\n--- importer ---\n${importer}\n--- project ---\n${pathnameToOperatingSystemPath(projectPathname)}`\n\nconst formulateImportMustBeInsideProject = ({\n  projectPathname,\n  specifier,\n  importer,\n  importResolved,\n}) => `import must be inside project.\n--- specifier ---\n${specifier}\n--- importer ---\n${importer}\n--- resolved import ---\n${importResolved}\n--- project path ---\n${pathnameToOperatingSystemPath(projectPathname)}`\n","import { hrefToOrigin, hrefToPathname } from \"@jsenv/href\"\nimport { resolveSpecifier } from \"../resolveSpecifier/resolveSpecifier.js\"\n\nexport const resolveSpecifierForProject = (\n  specifier,\n  projectPathname,\n  httpResolutionOrigin = \"http://fake_origin_unlikely_to_collide.ext\",\n) => {\n  const specifierHttpResolved = resolveSpecifier(specifier, httpResolutionOrigin)\n  if (hrefToOrigin(specifierHttpResolved) === httpResolutionOrigin) {\n    const specifierRelativePath = hrefToPathname(specifierHttpResolved)\n    return `file://${projectPathname}${specifierRelativePath}`\n  }\n  return specifierHttpResolved\n}\n","/**\n * wrapImportMap can be used to remap all your imports under a folder.\n *\n * It is used by jsenv to import from a compiled folder instead of source folder.\n *\n * wrapImportMap must preserve the import map order so that\n * applyImportMap can still match the most specific pattern first.\n *\n * Because order is directly connected to the pattern length\n * prefixing every pattern with something does not means we have to sort\n * the wrappedImportMap.\n *\n * However we must absolutely ensure if an import like '/' exists in imports\n * or scoped imports. It must remain the last when being prefixed.\n *\n */\n\nimport { assertImportMap } from \"../assertImportMap.js\"\nimport { hasScheme } from \"../hasScheme.js\"\n\nexport const wrapImportMap = (importMap, folderRelativeName, ensureInto = true) => {\n  assertImportMap(importMap)\n  if (typeof folderRelativeName !== \"string\") {\n    throw new TypeError(formulateFolderRelativeNameMustBeAString({ folderRelativeName }))\n  }\n\n  const into = `/${folderRelativeName}/`\n  const { imports, scopes } = importMap\n\n  let importsForWrapping\n  if (imports) {\n    importsForWrapping = wrapTopLevelImports(imports, into)\n  } else {\n    importsForWrapping = {}\n  }\n\n  let scopesForWrapping\n  if (scopes) {\n    scopesForWrapping = wrapScopes(scopes, into)\n  } else {\n    scopesForWrapping = {}\n  }\n\n  if (ensureInto) {\n    // ensure anything not directly remapped is remapped inside into\n    importsForWrapping[into] = into\n    importsForWrapping[\"/\"] = into\n    // and when already into, you stay inside\n    scopesForWrapping[into] = { [into]: into }\n  }\n\n  return {\n    imports: importsForWrapping,\n    scopes: scopesForWrapping,\n  }\n}\n\nconst wrapScopes = (scopes, into) => {\n  const scopesWrapped = {}\n\n  Object.keys(scopes).forEach((scopeKey) => {\n    const scopeValue = scopes[scopeKey]\n    const scopeKeyWrapped = wrapAddress(scopeKey, into)\n\n    const { importsWrapped, importsRemaining } = wrapImports(scopeValue, into)\n\n    let scopeValueWrapped\n    if (scopeHasLeadingSlashScopedRemapping(scopeValue, scopeKey)) {\n      const leadingSlashSpecifier = `${into}${scopeKey.slice(1)}`\n      scopeValueWrapped = {}\n      // put everything except the leading slash remapping\n      Object.keys(importsWrapped).forEach((importKeyWrapped) => {\n        if (importKeyWrapped === leadingSlashSpecifier || importKeyWrapped === into) {\n          return\n        }\n        scopeValueWrapped[importKeyWrapped] = importsWrapped[importKeyWrapped]\n      })\n      Object.keys(importsRemaining).forEach((importKey) => {\n        if (importKey === scopeKey || importKey === \"/\") {\n          return\n        }\n        scopeValueWrapped[importKey] = importsRemaining[importKey]\n      })\n      // now put leading slash remapping to ensure it comes last\n      scopeValueWrapped[leadingSlashSpecifier] = leadingSlashSpecifier\n      scopeValueWrapped[scopeKey] = leadingSlashSpecifier\n      scopeValueWrapped[into] = leadingSlashSpecifier\n      scopeValueWrapped[\"/\"] = leadingSlashSpecifier\n    } else {\n      scopeValueWrapped = {\n        ...importsWrapped,\n        ...importsRemaining,\n      }\n    }\n\n    scopesWrapped[scopeKeyWrapped] = scopeValueWrapped\n    if (scopeKeyWrapped !== scopeKey) {\n      scopesWrapped[scopeKey] = { ...scopeValueWrapped }\n    }\n  })\n\n  return scopesWrapped\n}\n\nconst scopeHasLeadingSlashScopedRemapping = (scopeImports, scopeKey) => {\n  return (\n    scopeKey in scopeImports &&\n    scopeImports[scopeKey] === scopeKey &&\n    \"/\" in scopeImports &&\n    scopeImports[\"/\"] === scopeKey\n  )\n}\n\nconst wrapImports = (imports, into) => {\n  const importsWrapped = {}\n  const importsRemaining = {}\n\n  Object.keys(imports).forEach((importKey) => {\n    const importValue = imports[importKey]\n    const importKeyWrapped = wrapSpecifier(importKey, into)\n    const importValueWrapped = wrapAddress(importValue, into)\n\n    const keyChanged = importKeyWrapped !== importKey\n    const valueChanged = importValueWrapped !== importValue\n    if (keyChanged || valueChanged) {\n      importsWrapped[importKeyWrapped] = importValueWrapped\n    } else {\n      importsRemaining[importKey] = importValue\n    }\n  })\n\n  return {\n    importsWrapped,\n    importsRemaining,\n  }\n}\n\nconst wrapTopLevelImports = (imports, into) => {\n  const { importsWrapped, importsRemaining } = wrapImports(imports, into)\n  return {\n    ...importsWrapped,\n    ...importsRemaining,\n  }\n}\n\nconst wrapSpecifier = (specifier, into) => {\n  if (specifier.startsWith(\"//\")) {\n    return specifier\n  }\n\n  if (specifier[0] === \"/\") {\n    return `${into}${specifier.slice(1)}`\n  }\n\n  if (specifier.startsWith(\"./\")) {\n    return `./${into}${specifier.slice(2)}`\n  }\n\n  return specifier\n}\n\nconst wrapAddress = (string, into) => {\n  if (string.startsWith(\"//\")) {\n    return string\n  }\n\n  if (string[0] === \"/\") {\n    return `${into}${string.slice(1)}`\n  }\n\n  if (string.startsWith(\"./\")) {\n    return `./${into}${string.slice(2)}`\n  }\n\n  if (string.startsWith(\"../\")) {\n    return string\n  }\n\n  if (hasScheme(string)) {\n    return string\n  }\n\n  // bare\n  return `${into}${string}`\n}\n\nconst formulateFolderRelativeNameMustBeAString = ({\n  folderRelativeName,\n}) => `folderRelativeName must be a string.\n--- folder relative name ---\n${folderRelativeName}`\n"],"names":["nativeTypeOf","obj","customTypeOf","Symbol","constructor","prototype","iterator","assertImportMap","value","TypeError","type","Array","isArray","hasScheme","string","test","hrefToScheme","href","colonIndex","indexOf","slice","hrefToPathname","ressourceToPathname","hrefToRessource","scheme","length","afterProtocol","pathnameSlashIndex","ressource","searchSeparatorIndex","hrefToOrigin","secondProtocolSlashIndex","pathnameToDirname","pathname","slashLastIndex","lastIndexOf","resolveUrl","specifier","baseUrl","writeBaseUrlMustBeAString","Error","writeBaseUrlMustBeAbsolute","writeBaseUrlRequired","baseOrigin","basePathname","baseDirname","unresolvedPathname","importerFolders","split","pop","resolvedPathname","join","tryUrlResolution","url","result","resolveSpecifier","importer","startsWith","applyImportMap","importMap","writeSpecifierMustBeAString","writeImporterMustBeAString","writeImporterMustBeAbsolute","specifierUrl","specifierNormalized","scopes","scopeKeyMatching","Object","keys","find","scopeKey","specifierIsPrefixOf","scopeValue","remappingFromScopeImports","applyImports","imports","remappingFromImports","writeBareSpecifierMustBeRemapped","importKeyArray","i","importKey","importValue","afterImportKey","specifierHref","key","defineProperty","enumerable","configurable","writable","target","arguments","source","ownKeys","forEach","getOwnPropertyDescriptors","defineProperties","getOwnPropertyDescriptor","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","push","apply","composeTwoImportMaps","leftImportMap","rightImportMap","composeTwoImports","composeTwoScopes","leftImports","rightImports","leftScopes","rightScopes","hasOwnProperty","sortImportMap","sortImports","undefined","sortScopes","importsSorted","sort","compareLengthOrLocaleCompare","name","scopesSorted","scopeName","a","b","localeCompare","normalizeImportMap","formulateBaseUrlMustBeAString","normalizeImports","normalizeScopes","importsNormalized","address","console","warn","formulateAddressMustBeAString","specifierResolved","addressUrl","formulateAdressResolutionFailed","endsWith","formulateAddressUrlRequiresTrailingSlash","scopesNormalized","scope","scopeUrl","formulateScopeResolutionFailed","scopeValueNormalized","addressURL","normalizeImportMapForProject","httpResolutionOrigin","pathnameToExtension","dotLastIndex","resolveImport","defaultExtension","applyDefaultExtension","extension","importerPathname","importerExtension","startsWithWindowsDriveLetter","firstChar","secondChar","replaceSlashesWithBackSlashes","replace","pathnameToOperatingSystemPath","pathnameWithoutLeadingSlash","pathnameToRelativePath","otherPathname","resolveImportForProject","projectPathname","importDefaultExtension","httpResolutionForcing","insideProjectForcing","projectHref","importerHref","hrefUseFileProtocol","formulateImporterMustBeInsideProject","importerForProject","importerRelativePath","importResolved","formulateImportMustBeInsideProject","importRelativePath","resolveSpecifierForProject","specifierHttpResolved","specifierRelativePath","wrapImportMap","folderRelativeName","ensureInto","formulateFolderRelativeNameMustBeAString","into","importsForWrapping","wrapTopLevelImports","scopesForWrapping","wrapScopes","scopesWrapped","scopeKeyWrapped","wrapAddress","wrapImports","importsWrapped","importsRemaining","scopeValueWrapped","scopeHasLeadingSlashScopedRemapping","leadingSlashSpecifier","importKeyWrapped","scopeImports","wrapSpecifier","importValueWrapped","keyChanged","valueChanged"],"mappings":"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"}